[
  {
    "objectID": "index.html#опис-навчальної-дисципліни",
    "href": "index.html#опис-навчальної-дисципліни",
    "title": "Вступ до програмування в R",
    "section": "Опис навчальної дисципліни",
    "text": "Опис навчальної дисципліни\nНавчальна дисципліна спрямована на вивчення основ практичного застосування популярної мови R для проведення статистичних досліджень в економіці.\nУ процесі вивчення курсу розглядаються теми, що стосуються теоретичних основ та практичної реалізації алгоритмів завантаження, підготовки та обробки економічних даних.\nМісце навчальної дисципліни у підготовці здобувачів: програмні результати дисципліни використовуються під час вивчення таких навчальних дисциплін: “Алгоритми та структури даних”, “Аналіз даних в R”, “Прикладне математичне моделювання в R”. Закріплення на практиці здобутих програмних результатів відбувається під час проходження Навчальної практики з курсу «Економіко-математичне моделювання»."
  },
  {
    "objectID": "index.html#мета-дисципліни",
    "href": "index.html#мета-дисципліни",
    "title": "Вступ до програмування в R",
    "section": "Мета дисципліни",
    "text": "Мета дисципліни\nМета навчальної дисципліни – формування у студентів теоретичних знань та практичних навичок використання мови програмування R для роботи з даними та базовими структурами мови (типи даних, розгалуження, цикли, функції)."
  },
  {
    "objectID": "index.html#дотримання-принципів-доброчесності",
    "href": "index.html#дотримання-принципів-доброчесності",
    "title": "Вступ до програмування в R",
    "section": "Дотримання принципів доброчесності",
    "text": "Дотримання принципів доброчесності\nВикладач та слухач цього курсу, як очікується, повинні дотримуватися Кодексу академічної доброчесності університету:\n\nбудь-яка робота, подана здобувачем протягом курсу, має бути його власною роботою здобувача; не вдаватися до кроків, що можуть нечесно покращити Ваші результати чи погіршити/покращити результати інших здобувачів;\nякщо буде виявлено ознаки плагіату або іншої недобросовісної академічної поведінки, то студент буде позбавлений можливості отримати передбачені бали за завдання;\nне публікувати у відкритому доступі відповіді на запитання, що використовуються в рамках курсу для оцінювання знань здобувачів;\nпід час фінальних видів контролю необхідно працювати самостійно; не дозволяється говорити або обговорювати, а також не можна копіювати документи, використовувати електронні засоби отримання інформації.\n\nПорушення академічної доброчесності під час виконання контрольних завдань призведе до втрати балів або вживання заходів, які передбачені Кодексу академічної доброчесності НаУОА."
  },
  {
    "objectID": "index.html#рецензування",
    "href": "index.html#рецензування",
    "title": "Вступ до програмування в R",
    "section": "Рецензування",
    "text": "Рецензування\nВнутрішній рецензент: Іваненко Іван Іванович, д.т.н, доцент кафедри економіко-математичного моделювання та інформаціних технологій Національного університету “Острозька акакдемія”\nЗовнішній рецензент: Іваненко Іван Іванович, д.т.н, проф. кафедри економіко-математичного моделювання та інформаціних технологій Національного університету “Острозька акакдемія”"
  },
  {
    "objectID": "index.html#підтримка-видання",
    "href": "index.html#підтримка-видання",
    "title": "Вступ до програмування в R",
    "section": "Підтримка видання",
    "text": "Підтримка видання\nЧастина матеріалів посібника створено у межах проекту “Підготовка, обробка та ефективне використання даних для наукових досліджень (на основі R)”, що підтримує Європейський союз за програмою House of Europe.\n\n\n\n\n\n\nМатеріали курсу створені з використанням ряду технологій:\n\nR Language (r-cra?) - безкоштована мова програмування для виконання досліджень у сфері статистики, машинного навчання та візуалізацї результатів.\nQuarto Book - система для публікації наукових та технічних текстів з відкритим кодом (R/Python/Julia/Observable).\nJupyterLab - середовище розробки на основі Jupyter Notebook. JupyterLab є розширеним веб-інтерфейсом для роботи з ноутбуками.\nGit/Github - система контролю версій та, відповідно, сервіс для організації зберігання коду, а також публікації статичних сторінок."
  },
  {
    "objectID": "index.html#цитування",
    "href": "index.html#цитування",
    "title": "Вступ до програмування в R",
    "section": "Цитування",
    "text": "Цитування\nДля цитування матералів посібника ви можете скористатися bibtex-описом:\n@book{intro-to-r,\n  author       = {Юрій Клебан},\n  title        = {Вступ до програмування в R},\n  publisher    = {Zenodo},\n  year         = 2022,\n  doi          = {10.5281/zenodo.7251420},\n  url          = {https://doi.org/10.5281/zenodo.7251420}\n}\n\nПриміка. Усі логотипи, назви продуктів належать їх власникам."
  },
  {
    "objectID": "00-intro.html",
    "href": "00-intro.html",
    "title": "Вступ",
    "section": "",
    "text": "На даний час існує велика кількість мов програмування, що інтегруються у суспільні сфери діяльності людини та роботи технічних систем: біоінформатика, а також економіка та бізнес.\nОднією з мов програмування, що отримали широке поишення серед економістів-науковців, аналітиків та практиків математичного моделювання (machine learning) є мова програмування (R)(R Core Team 2020). Свою популярність ця мова програмування здобула завдяки простоті у використанні, доступності (безкоштовні як базові компоненти для написання коду, так і середовища розробки), розширюваності (кожен розробник має можливість створювати власні пакети та публікувати їх у відкритому доступі).\nОсновними задачами курсу “Вступ до прграмування в R” є ознайомлення студентів з базовми конструкціями мови програмування R, вивчення способів роботи з найпоширенішими типами даних,\n\n\n\n\n\nR Core Team. 2020. R: A Language and Environment for Statistical Computing. Vienna, Austria: R Foundation for Statistical Computing. https://www.R-project.org/."
  },
  {
    "objectID": "01-what-is-r.html",
    "href": "01-what-is-r.html",
    "title": "\n1  Що таке R?\n",
    "section": "",
    "text": "Синтаксис мови програмування R є досить простим для вивчення та використання, а широкий набір готових пакетів дозволяє використати готові розробки для виіршення широкого спектру задач від статистичних обчислень до навчання нейронних мереж для розпізнавання/класифікації зображень.\nВажливо відмітити, що мова програмування R є безкоштовною (free) і має відкритий код (open source).\nR має ряд корисних властивостей, серед яких варто виділити:\n\nВізуалізація даних. Побудова різноманітих видів графіків, робота з мапами, широкий спектр бібліотек та налаштувань до них.\nПовторне використання коду. На відміну від електронних таблиць, що мають обмеження на кількість спостережень (наприклад, MS Excel), R дозволяє працювати з великими масивами даних та перезапускати обчислення у потрібний момент не створюючи додаткових копій даних.\nМашинне навчання. R дозволяє використати для побудови, навчання та тестування моделей, а також оптимізації гіперпараметрів та відбору факторів дуже велику кількість алгоритмів. Існують також спеціальні пакети, що об’єднують у собі усі описані функції та алгоритми, наприклад, caret та mlr.\nАвтоматизація. Написаний код та проєкти можна перетворити у готові до публікації та впровадження продукти (deployment) або використовувати напрацьовані алгоритми для швидкого вирішення схожих задач (pipeline).\n\nТакож можна виділити досить корисні фічі Розробка веб-застосунків та Звітність, адже, використовуючи спеціальні бібліотеки (shiny, shinydashboard, flexdashboard, rmarkdown, knitr тощо), результати виконаної роботи можна “оживити” або сформувати “на льоту” готові до презентації документи."
  },
  {
    "objectID": "02-r-history.html",
    "href": "02-r-history.html",
    "title": "\n2  Коротка історія мови R\n",
    "section": "",
    "text": "Влітку 1993 року двоє молодих новозеландських вчених анонсували свлю нову розробку, яку вони назвали R (є інформація, що буква “R” була обрана тому, що вона стоїть перед “S” у латинському алфавіті, тут є аналогія з мовою “C”, якій передувала мова “B”). За задумом авторів (Robert Gentelman та Ross Ihaka) це повинна була бути нова реалізація мови S, що відрізнялася від S-Plus деякими деталями, наприклад, роботою з локальними та глобальними змінними, пам’яттю тощо. Фактично було створено нову мову, що відгалуджується від S.\nПроект з самого початку розвивався досить повільно, але коли у команди розробників R з’явлися ресурси, в тому числі зручна системи створення розширень (пакетів), все більше аналітиків, статистиків, вчених, програмістів почало переходити з S-Plus на R. Коли були усунуті проблеми роботи з пам’яттю перших версій R, на цю мову почали переходити користувачі інших статистичних пакетів (SAS, Stata, SYSSTAT).\nКількість книг та публікацій у мережі Інтернет по роботі з R постійно зростає разом із зацікавленням молодих і вже досвідчених спеціалістів зі сфери ІТ темою науки про дані, машинним навчанням, аналітикою для бізнесу, охорони здоров’я тощо."
  },
  {
    "objectID": "03-r-environment.html",
    "href": "03-r-environment.html",
    "title": "\n3  Вcтановлення та налаштування R\n",
    "section": "",
    "text": "R є безкоштовним програмним забезпеченням, що розповсюджується за умовами GNU General Public License. Код, написаний на R компілюється та запускається на різних платформах: UNIX, Windows, MacOS (R Core Team 2020)."
  },
  {
    "objectID": "03-r-environment.html#завантаження-та-інсталяція-r",
    "href": "03-r-environment.html#завантаження-та-інсталяція-r",
    "title": "\n3  Вcтановлення та налаштування R\n",
    "section": "\n3.1 Завантаження та інсталяція R",
    "text": "3.1 Завантаження та інсталяція R\nДля завантаження актуальної версії R варто перейти на сайт проекту https://cran.r-project.org/.\nНа сайті обираємо завантаження R для потрібної операційної системи. У межах курсу ми вокристовуємо ОС Windows, проте на синтаксис мови програмування та процес написання коду це не впливає:\n\n\nРис. 3.1: Завантаження R. Вибір ОС\n\n\nУ наступному вікні клікаємо на install R for the first time:\n\n\nРис. 3.2: Завантаження R. Перша інсталяція\n\n\nДалі обираємо Download R 4.X.X for Windows, де 4.X.X версія R, яка може бути відмінною на момент вивчення курсу:\n\n\nРис. 3.3: Завантаження R. Завантаження версії для ОС\n\n\nПісля завантаження файлу інсталяції потрібно його запустити. Зазвичай завантажений файл можна побачити у лівому нижному кутку браузера або у розділі “Завантаження” Вашого браузера. Наприклад, у браузері Google Chrome знайти цей пункт меню так:\n\n\nРис. 3.4: Завантаження R. Розділ \"Завантаження\" у Google Chrome"
  },
  {
    "objectID": "03-r-environment.html#перший-запуск-r-gui",
    "href": "03-r-environment.html#перший-запуск-r-gui",
    "title": "\n3  Вcтановлення та налаштування R\n",
    "section": "\n3.2 Перший запуск R GUI\n",
    "text": "3.2 Перший запуск R GUI\n\nЗа замовчуванням під час інсталяції R у ОС Windows пропонується шлях C:\\Program Files\\R\\R-4.X.X.\nДля запуску R GUI (стандартного графічного інтерфейсу для роботи з R) потрібно зайти у папку bin\\x64 (або i386, якщо у Вас 32-х розрядна ОС) та запустити файл Rgui.exe.\nВигляд вікна R GUI зображено нижче:\n\n\nРис. 3.5: Вигляд головного вікна RGui\n\n\n\n\n\n\n\n\nNote\n\n\n\nGUI (Graphical User Interface) - набір візуальних компонентів для інтерактивної взаємодії користувача з програмним забезпеченням.\n\n\nУ вікні R Console можна вводити команди/інструкції R, що будуть виконуватися:\nРезультати виконання команд зберігаються у памяті програми і можуть бути використані у наступних блоках коду:\n\n\nРис. 3.6: Вигляд консолі для команд RGui\n\n\nСередовище R GUI має широкий спектр функцій і дозволяє написати будь-якого рівня складності проекти на R, проте він є лише базовою графічною обгорткою для R. Розглянемо інші зручніші середовища для написання R-коду."
  },
  {
    "objectID": "03-r-environment.html#поняття-робочого-простору",
    "href": "03-r-environment.html#поняття-робочого-простору",
    "title": "\n3  Вcтановлення та налаштування R\n",
    "section": "\n3.3 Поняття робочого простору",
    "text": "3.3 Поняття робочого простору\nУ процесі виконання коду створені об’єкти/змінні та функції зберігаються у поточній сесії. У R є можливість переглянути список збережних елментів, видалити усі або окремі, зберегти стан поточної сесії диск та завантажити його пізніше, щоб не проходти усі етапи виконання коду повторно (інколи дуже складний код може виконувати досить довго і збереження проміжних результатів може бути хорошим рішенням).\nДля прикладу створимо дві змінні var1, var2 та виведемо на консоль їх значення:\n\nvar1 <- 10\nvar2 <- sqrt(15)\nvar1\n\n[1] 10\n\nvar2\n\n[1] 3.872983\n\n\nДля того аби переглянути список змінних у поточній сесії варто скористатися ls():\n\nls()\n\n[1] \"var1\" \"var2\"\n\n\nЯкщо виникає потреба очистити робочий простір і звільними пам’ять використовується команда rm(). Так, щоб очистити усі змінні можна скористатися rm(list = ls()), якщо ж Ви хочете видалити якусь одну/дві змінних, то просто вкажіть імена:\n\nrm(list = c(\"var1\"))\nls()\n\n[1] \"var2\"\n\n\nТаким чином, після виконання коду вище, залишиться лише змінна var2.\nЗберігання образу (image) робочого простору на диск здійснюється за допомогою команди save.image(\"шлях до файлу.RData\"), а його зчитування за допомогою load(\"шлях до файлу.RData\").\nКод збереження даних:\n\n# Clear workspace\nrm(list = ls())\n\n# Declare variables\na <- 10\nb <- a + 15\n\n# Save image to file\nsave.image(\"tmp.RData\")\n\nКод читання та виведення даних:\n\n# Clear workspace\nrm(list = ls())\n\n# load image to file\nload(\"tmp.RData\")\n\nprint(a)\n\n[1] 10\n\nprint(b)\n\n[1] 25\n\n\nУ прикладі 2 не створюєть жодного параметра, проте вони збережні у файлі сесії.\nДля того аби зберегти та зчитати окремий об’єкт, а не всі елементи сесії у R є спеціальний формат .RDS, який реалізовується методами saveRDS(об'єкт, file=\"шлях_файлу.rds\") та readRDS(file=\"шлях_файлу.rds\")."
  },
  {
    "objectID": "03-r-environment.html#поняття-робочого-каталогу",
    "href": "03-r-environment.html#поняття-робочого-каталогу",
    "title": "\n3  Вcтановлення та налаштування R\n",
    "section": "\n3.4 Поняття робочого каталогу",
    "text": "3.4 Поняття робочого каталогу\nРобота в будь-якому середовищі передбачає зв’язок із поточним каталогом, відносно якого будуються шляхи до файлів. Звичайно можна писати завжди повний шлях до файла, проте такий підхід є досить негнучким і під час перенесення коду між ПК створює чимало проблем розробникам.\nДля визначення базового каталогу R в поточній сесії використовують команду getwd(). Якщо Ви користуєтеся RStudio та створили проєкт, то цей каталог буде відповідати повному шляху до папки проєкту:\n\ngetwd()\n\n[1] \"E:/Repos/OA_2023/intro-to-r-source\"\n\n\nДля того аби змінити поточний робочий каталог використовують команду setwd(шлях). Після запуску цієї команди функцій getwd() буде вказутивати уже на нову адресу/шлях.\n\n\n\n\n\n\nImportant\n\n\n\nВарто знати та вміти будувати абсолютні та відносні шляхи до каталогів та файлів, ці знання корисні для роботи з усіма мовами програмування та більшістю ПЗ для роботи з даними.\n\n\nДля запису шляху у ОС Windows можна скористатися 2-ма способами:\n\n\n/ - слеш, записується як один знак;\n\n\\\\ - бекслеш, записується як два знаки.\n\nУ прикладі нижче обидва шляхи ведуть до тієї ж папки (drive - буква диска):\nsetwd(\"drive:/folder1/folder2/\")\nsetwd(\"drive:\\\\folder1\\\\folder2\\\\\")\nДля перегляду інформації про наявні каталоги та файли у поточній робочій папці можна скористатися командою dir() або list.files():\n\ndir()\n\n [1] \"_language-ua.yml\"           \"_quarto.yml\"               \n [3] \"00-intro.html\"              \"00-intro.qmd\"              \n [5] \"01-what-is-r.html\"          \"01-what-is-r.qmd\"          \n [7] \"02-r-history.html\"          \"02-r-history.qmd\"          \n [9] \"03-r-environment.html\"      \"03-r-environment.qmd\"      \n[11] \"03-r-environment.rmarkdown\" \"03-r-environment_files\"    \n[13] \"04-r-help.html\"             \"04-r-help.qmd\"             \n[15] \"05-r-packages.html\"         \"05-r-packages.qmd\"         \n[17] \"06-r-variables.html\"        \"06-r-variables.qmd\"        \n[19] \"07-r-basic-types.html\"      \"07-r-basic-types.qmd\"      \n[21] \"08-r-operators.html\"        \"08-r-operators.qmd\"        \n[23] \"09-userful-math copy 2.qmd\" \"09-userful-math copy 6.qmd\"\n[25] \"09-userful-math.html\"       \"09-userful-math.qmd\"       \n[27] \"10-r-functions.html\"        \"10-r-functions.qmd\"        \n[29] \"11-r-vectors.html\"          \"11-r-vectors.qmd\"          \n[31] \"12-r-data.frames.html\"      \"12-r-data.frames.qmd\"      \n[33] \"13-r-lists.html\"            \"13-r-lists.qmd\"            \n[35] \"commands\"                   \"css\"                       \n[37] \"demo.qmd\"                   \"docs\"                      \n[39] \"identity\"                   \"img\"                       \n[41] \"index.html\"                 \"index.log\"                 \n[43] \"index.qmd\"                  \"index.tex\"                 \n[45] \"index_files\"                \"intro-to-r-source.Rproj\"   \n[47] \"references.bib\"             \"references.html\"           \n[49] \"references.qmd\"             \"site_libs\"                 \n[51] \"summary.qmd\"                \"tmp.RData\"                 \n\nlist.files()\n\n [1] \"_language-ua.yml\"           \"_quarto.yml\"               \n [3] \"00-intro.html\"              \"00-intro.qmd\"              \n [5] \"01-what-is-r.html\"          \"01-what-is-r.qmd\"          \n [7] \"02-r-history.html\"          \"02-r-history.qmd\"          \n [9] \"03-r-environment.html\"      \"03-r-environment.qmd\"      \n[11] \"03-r-environment.rmarkdown\" \"03-r-environment_files\"    \n[13] \"04-r-help.html\"             \"04-r-help.qmd\"             \n[15] \"05-r-packages.html\"         \"05-r-packages.qmd\"         \n[17] \"06-r-variables.html\"        \"06-r-variables.qmd\"        \n[19] \"07-r-basic-types.html\"      \"07-r-basic-types.qmd\"      \n[21] \"08-r-operators.html\"        \"08-r-operators.qmd\"        \n[23] \"09-userful-math copy 2.qmd\" \"09-userful-math copy 6.qmd\"\n[25] \"09-userful-math.html\"       \"09-userful-math.qmd\"       \n[27] \"10-r-functions.html\"        \"10-r-functions.qmd\"        \n[29] \"11-r-vectors.html\"          \"11-r-vectors.qmd\"          \n[31] \"12-r-data.frames.html\"      \"12-r-data.frames.qmd\"      \n[33] \"13-r-lists.html\"            \"13-r-lists.qmd\"            \n[35] \"commands\"                   \"css\"                       \n[37] \"demo.qmd\"                   \"docs\"                      \n[39] \"identity\"                   \"img\"                       \n[41] \"index.html\"                 \"index.log\"                 \n[43] \"index.qmd\"                  \"index.tex\"                 \n[45] \"index_files\"                \"intro-to-r-source.Rproj\"   \n[47] \"references.bib\"             \"references.html\"           \n[49] \"references.qmd\"             \"site_libs\"                 \n[51] \"summary.qmd\"                \"tmp.RData\""
  },
  {
    "objectID": "03-r-environment.html#робота-з-rstudio",
    "href": "03-r-environment.html#робота-з-rstudio",
    "title": "\n3  Вcтановлення та налаштування R\n",
    "section": "\n3.5 Робота з RStudio\n",
    "text": "3.5 Робота з RStudio\n\n\n3.5.1 Завантаження та інсталяція RStudio Desktop\n\nRStudio - це інтегроване середовище розробки для R. Воно включає у себе консоль, підсвічування синтаксису (підказки), прямий запуск коду, інструменти для візуалізації графіків, html-коду, історію виконаних команд, відлагоджування коду, управління робочими просторами, підтримка різних видів розмітки та багато іншого. RStudio має версію з відкритим кодом та комерційну версію для Windows, Linux та Mac, а також веб-версію для серверів на Linux RStudio Server та RStudio Server Pro (RStudio Official Website 2021).\n\n\n\n\n\n\nNote\n\n\n\nIDE (integrated development environment) - комплексне програмне рішення для розробки програмного забезпечення. Зазвичай, складається з редактора початкового коду, інструментів для автоматизації складання та відлагодження програм. Більшість сучасних середовищ розробки мають можливість автодоповнення коду. Wikipedia\n\n\nЗавантажити продукти можна з сайту https://rstudio.com. Щоб знайти середовище, яке ми будемо використовувати під час вивчення курсу варто виконати наступні кроки:\n\nУ головному меню сайту обрати Products > RStudio.\nЗнаходимо на сторінці кнопку для завантаження програми RStudio Desktop версії Open Source та натискаємо DOWNLOAD RSTUDIO DESKTOP:\n\n\n\nРис. 3.7: Вибір версії RStudio Desktop\n\n\n\nДалі обираємо завантаження безкоштовної версії RStudio Desktop з наданого переліку:\n\n\n\nРис. 3.8: Завантаження RStudio Desktop\n\n\nПісля завантаження запускаємо інсталятор RStudio. Особливих кроків у цьому процесі немає.\nПісля запуску IDE RStudio зазвичай складається з 3-х або 4-х блоків: * Файл, з яким працювали останнім (зліва зверху). * Консоль для введення коду та виведення результатів (зліва знизу). * Змінні середовища (Environment) (справа зверху) + Історія команд (History), Зєднання з зовнішніми ресурсами даних, наприклад, бази даних (Connections), навчальна інструкція (Tutorial). * Файли каталогу або проекту (Files), Інстальовані пакети (Packages), Допомога (Help), Візуалізація результатів (Plots, Viewer).\n\n\nРис. 3.9: Головне вікно RStudio Desktop\n\n\nДля першої демонстрації роботи виконаємо у консолі 2 рядки коду:\n\n\nРис. 3.10: Приклад написання коду в RStudio Desktop\n\n\nПерший рядок з кодом data <- c(3,7,1,6,3,4,5,4,2) створює у пам’яті колекцію чисел. Зверніть увагу, що у блоці Environments відобраюаться усі змінні, що уснують у поточному робочому просторі (про це буде далі).\nДругий рядок plot(data, type=\"l\") дозволяє побудувати простий лінійний графік (type=\"l\" - linear, \"p\" - point, help(plot) для деталей). Графіки, що “промальовуються” як картинки выдображаються у блоці Plots. Якщо ж графік має більш складну візуалізацію з інтерактивними елементами, що використовують уже засоби html/css/js, то він буде відображений у блоці View.\nЯкщо перемкнутися на вкладку History, то ми побачимо перелік раніше виконаних команд.\n\n\n\n\n\n\nNote\n\n\n\nДля швидкого “гортання” уже виконаних раніше команд на консолі (Console) можна скористатися клавішами Up/Down на клавіатурі: \n\n\n\n3.5.2 Створення першого проекту в RStudio\nНа відміну від R Gui в RStudio реалізовано концепцію проектів, що дозволяє організувати код та поєднати різні його частини у межах певного рішення.\nСтворимо наш перший проект.\nДля початку оберемо з верхнього меню пункт File > New Project. У вікні вибору способу створення проекту клікаємо New Directory. Такий спосіб передбачає, що жодного файлу проекту поки не існує або ми пізніше туди скопіюємо уже готовий код.\n\n\nРис. 3.11: RStudio Desktop. Новий проєкт\n\n\nНа наступному кроці обираємо New Project:\n\n\nРис. 3.12: RStudio Desktop. Новий проєкт. Тип проекту\n\n\nПісля кліку на Create Project буде створено папку за попередньо обраним шляхом. Для запуску проєкту або швидкого перемикання між проектами можна скористатися як пунктами головного меню, так і підменю проектів справа. Також відкрити проект можна запуском файлу *.Rproj у провіднику Windows.\n\n\nРис. 3.13: RStudio Desktop. Новий проєкт\n\n\nЩоб додати новий файл з кодом R потрібно обрати з головного меню File > New file > R Script або скористатися командою Ctrl+Shift+N. Новий файл буде створено з назвою Untitled[X], тому рекомендую одразу його зберегти, наприклад, як TestCode.R\nДля першого проекту розвяжемо наступну задачу:\n\nНаписати програму, що генерує вектор з 20-ти випадкових чисел у межах [1;5], обчислює середнє та суму чисел, а також виводить гістограму частоти кожного значення (скільки разів дане число повторюється у векторі).\n\nКод для генерації 20-ти випадкових чесел у діапазоні [1;5] матиме наступний вигляд:\n\nvtr <- sample(1:5, 20, replace=TRUE)\nvtr\n\n [1] 2 3 4 2 4 2 3 4 1 3 4 2 1 5 4 5 2 3 3 2\n\n\n\n\n\n\n\n\nImportant\n\n\n\nРезультати виконання на Вашому ПК будуть іншими, адже псевдогенератор випадкових чисел буде брати іншу “точку відліку” для генерування чисел. Рекомендую перегляду функцію set.seed(точка відліку - число).\n\n\nОбчислення та виведення на консоль інформації про суму та середнє значення:\n\nvtr_sum <- sum(vtr)\nvtr_mean <- mean(vtr)\n\nprint(paste0(\"Sum: \", vtr_sum))\n\n[1] \"Sum: 59\"\n\nprint(paste0(\"Mean: \", vtr_mean))\n\n[1] \"Mean: 2.95\"\n\n\nВиведемо гістограму:\n\nhist(vtr, breaks = 5)\n\n\n\nПриклад візуалізації гістрограми в R\n\n\n\n\nПримітка. Детальніше про параметри функції hist() можна почитати тут: https://www.rdocumentation.org/packages/graphics/versions/3.6.2/topics/hist.\nОрієнтовний вигляд вікна RStudio після викоання усіх описаних вище операцій матиме настпуний вигляд:\n\n\nРис. 3.14: RStudio Desktop. Перегляд змінних\n\n\nВарто звернути увагу на виділений блок Environment, де можна переглянути усі доступні змінні, що є на даний момент у пам'яті. До цих параметрів можна звертатися у коді чи з консолі у будь, який момент. Детальну інформацію про робоче середовище розглянуто нижче."
  },
  {
    "objectID": "03-r-environment.html#робота-з-jupyter-notebook",
    "href": "03-r-environment.html#робота-з-jupyter-notebook",
    "title": "\n3  Вcтановлення та налаштування R\n",
    "section": "\n3.6 Робота з Jupyter Notebook\n",
    "text": "3.6 Робота з Jupyter Notebook\n\nНоутбуки стали зручним та поширеним інструментом для аналізу даних, а також послідовного викладення матеріалів чи результатів дослідження. Перевагою такого інструменту є перемішування коду, результатів його виконання та іншого текстового наповнення, що дозволяє сформувати “на льоту” готові до читання документи.\nВикористання ноутбуків у навчальному процесі дозволяє описати не лише теоретичний матеріал, але приклади коду, що будуть виконувати безпосередньо під час ознайомлення з лекцією. Також слухач курсу може відредагувати наявний код та перевірити результати його виконання.\nРозгялнемо процес інсталяції та запуску Anaconda (середовище з відкритим кодом для вирішення задач Data Science) та Jupyter Notebook на ПК.\nДля встановлення середовища Anaconda потрібно перейти на сайт проекту та завантажити індивідуальну версію продукту: https://www.anaconda.com/products/individual (Anaconda. The World’s Most Popular Data Science Platform 2021).\n_*Примітка. Усі операції у даному курсі виконуються під операційну систему Windows 11 Education Edition_.\nПроцес інсталяції середовища Anaconda не відрізняється від стандарного покрокового вставнолення програм у Windows.\nПісля запуску Anaconda Navigator для початку потрібно створити нове середовище та налаштувати роботу R:\n\n\nРис. 3.15: Anaconda Navigator\n\n\nДля початку потрібно перейти на вкладку Environments та натиснути Create:\n\n\nРис. 3.16: Головне вікно Anaconda Navigator\n\n\nУ вікні, що відкрилося потрібно відмітити [x] вставновлення інструментів для роботи з R:\n\n\nРис. 3.17: Створення нового середовища на основі R у Anaconda Navigator\n\n\nПісля встановлення R-інструментів оптрібно переключитися на вкладку Home та робочий простір:\n\n\nРис. 3.18: Зміна середовища у Anaconda Navigator\n\n\nПісля завантаження робочого простору оберіть Launch для запуску Jupyter Notebook з переліку встановлених засобів. Jupyter Notebook буде запущено у браузері за замовчеванням Вашого ПК. Відкрити ноутбук можна обравши потрібний файл, а створити новий у меню справа New > Notebook > R:\n\n\nРис. 3.19: Створення нового Jupyter Notebook"
  },
  {
    "objectID": "03-r-environment.html#огляд-додаткових-ide-та-сервісів-для-роботи-з-r",
    "href": "03-r-environment.html#огляд-додаткових-ide-та-сервісів-для-роботи-з-r",
    "title": "\n3  Вcтановлення та налаштування R\n",
    "section": "\n3.7 Огляд додаткових IDE та сервісів для роботи з R",
    "text": "3.7 Огляд додаткових IDE та сервісів для роботи з R\nОкрім середовищ описаних вище існує ряд досить цікавих інструментів, що роблять досить зручною роботу з R-кодом. Розглянемо ці інструменти.\nVisual Studio Code - безкоштовний редактор коду від Microsoft, орієнтовний на велику кількість мов програмування та фреймворків (Visual Studio Code 2021). Серед інших іструментів у VS Code доступні також розширення для роботи з R:\n\n\nРис. 3.20: Вікно середовища Visual Studio Code\n\n\nVisual Studio Community Edition - безкоштовне середовище розробки від компаній Microsoft. VS створено з самого початку для розробки під платформу .NET та мови програмування C#, VB.NET, F# тощо, але з часом отримало багато розширень, що дозволяють у тому числі, працювати і з проектами в R (Visual Studio Community Edition 2021).\nGoogle Collab - онлайн сервіс для роботи з ноутбуками для Data Science від компанії Google (Google Colaboratory 2021):\n\n\nРис. 3.21: Вікно середовища Google Collab\n\n\nПримітка. Код у прикладі вище написаний на Python.\nkaggle.com - сервіс для змагань з Data Science та Machine Learning. Окрім переліку змагань, наборів даних сервіс має досить зручні ноутбуки.\n\n\nРис. 3.22: kaggle.com\n\n\nЗагалом сервісів та середовищ для розробки в R існує досить багато і їх кількість зростає, але це не впливає на принципи написання коду та роботу з даними.\n\n\n\n\nAnaconda. The World’s Most Popular Data Science Platform. 2021. 206 379 Broadway Ave., Suite 310 New York, NY 10013, USA: Anaconda Inc. https://www.anaconda.com/.\n\n\nGoogle Colaboratory. 2021. Google LLC. https://colab.research.google.com/.\n\n\nR Core Team. 2020. R: A Language and Environment for Statistical Computing. Vienna, Austria: R Foundation for Statistical Computing. https://www.R-project.org/.\n\n\nRStudio Official Website. 2021. 250 Northern Ave, Boston, MA 02210: RStudio, PBC. https://rstudio.com/.\n\n\nVisual Studio Code. 2021. Microsoft. https://code.visualstudio.com/.\n\n\nVisual Studio Community Edition. 2021. Microsoft. https://visualstudio.microsoft.com/."
  },
  {
    "objectID": "04-r-help.html",
    "href": "04-r-help.html",
    "title": "\n4  Документація та допомога\n",
    "section": "",
    "text": "# Get help for intersect() function\nhelp(intersect)\nЯкщо є потреба отримати інформацію про пакет скористайтеся:\nhelp(package = \"stats\")\nРозглянемо для прикладу візуалізацію інформації про функцію mean(), що використовується для знаходження середнього значення:\nhelp(mean)\n\n\nРис. 4.1: Скріншот інформації про функцію mean() з пакету base(R Core Team (2020))\n\n\nОтримана інформація дозволить визначити як правильно викликати функцію, які параметри вона приймає та що вони означають. Наявність прикладів виклику функції такод полегшить роботу з написання коду.\n\n\n\n\nR Core Team. 2020. R: A Language and Environment for Statistical Computing. Vienna, Austria: R Foundation for Statistical Computing. https://www.R-project.org/."
  },
  {
    "objectID": "05-r-packages.html",
    "href": "05-r-packages.html",
    "title": "\n5  Робота з пакетами\n",
    "section": "",
    "text": "Своєю популярністю R завдячує, у тому числі, і можливості швидко реалізувати досить складні дослідження за допомогою наборів уже готових функції. Такі функції обєднуються у пакети та публікуються вченими, досліджниками та розробниками зі всього світу.\nПакети в R - організовані набори методів та класів для виконання вузького набору задач під час програмування на R. Вони містять як функції так і опис способів їх використання, а чтакож дані для відтворення прикладів коду.\nПакети можуть бути завантажені з офіційного сайту проекту cran.r-project.org / (R Core Team 2020) або інших джерел (dev-версії є доступні на github).\nЗавантаження пакетів у R можна здійснювати як з локального диска, так і з серверів у мережі Інтернет.\nДля встановлення пакету використовується команда install.packages():\ninstall.packages(\"fun\")\nДля підключення пакету та його використання варто скористатися функцією library():\npackageDescription(\"fun\")\nhelp(package = \"fun\")\n\n\n\n\n\n\nNote\n\n\n\nДуже рекомендую почитати детальніше про пакети у статті на DataCamp: R Packages: A Beginner’s Guide."
  },
  {
    "objectID": "05-r-packages.html#робота-з-пакетами-в-rstudio",
    "href": "05-r-packages.html#робота-з-пакетами-в-rstudio",
    "title": "\n5  Робота з пакетами\n",
    "section": "\n5.2 Робота з пакетами в RStudio\n",
    "text": "5.2 Робота з пакетами в RStudio\n\nРобота з пакетами в RStudio організована досить зручно і дозволяє швидко переглянути інформацію про пакет та функції, які він дозволяє використати.\nДля інсталяції та оновлення пакетів можна скористатися меню Tools:\n\n\nРис. 5.1: Меню інсталяції пакетів у RStudio Desktop\n\n\nПісля вибору Install Packages... відкриється вікно, де можна обрати як джерело інсталяції пакету так і сам пакет з переліку, ввівши кілька перших букв його назви:\n\n\nРис. 5.2: Вибір пакету для інсталяції у RStudio Desktop\n\n\nRStudio дозволяє також переглянути інстальовані пакети/бібліотеки, розроблені іншими користувачами та завантажені у пам’ять (“галочка” навпроти назви пакету):\n\n\nРис. 5.3: Перегляд інстальованих пакетів у RStudio Desktop\n\n\nДоступ до функцій та інших елементів пакету можна здійснювати використавши запис назва_пакету::назва_функції() без підключення бібліотеки за допомогою library():\n\n\nРис. 5.4: Приклад використання пакету fun у RStudio Desktop\n\n\nКористувачі можуть не тільки завантажувати існуючі пакети, але і створювати власні та роботи їх доступними для дослідників зі всього світу.\n\n\n\n\nR Core Team. 2020. R: A Language and Environment for Statistical Computing. Vienna, Austria: R Foundation for Statistical Computing. https://www.R-project.org/."
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "Список використаних джерел",
    "section": "",
    "text": "Anaconda. The World’s Most Popular Data Science Platform. 2021.\n206 379 Broadway Ave., Suite 310 New York, NY 10013, USA: Anaconda Inc.\nhttps://www.anaconda.com/.\n\n\nGoogle Colaboratory. 2021. Google LLC. https://colab.research.google.com/.\n\n\nR Core Team. 2020. R: A Language and Environment for Statistical\nComputing. Vienna, Austria: R Foundation for Statistical Computing.\nhttps://www.R-project.org/.\n\n\nRStudio Official Website. 2021. 250 Northern Ave, Boston, MA\n02210: RStudio, PBC. https://rstudio.com/.\n\n\nVisual Studio Code. 2021. Microsoft. https://code.visualstudio.com/.\n\n\nVisual Studio Community Edition. 2021. Microsoft. https://visualstudio.microsoft.com/."
  }
]